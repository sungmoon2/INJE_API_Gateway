================================================================================
모바일 핫스팟을 이용한 외부 환경 테스트 가이드 🔥
================================================================================

목표: 랩탑을 모바일 핫스팟으로 연결하여 완전히 다른 네트워크에서 API Gateway 접근 테스트

현재 서버 정보:
- 서버 IP: 192.168.0.25
- 현재 포트: 3001
- 현재 상태: localhost 바인딩 (외부 접근 불가)

================================================================================
1단계: 서버 외부 접근 설정 (5분)
================================================================================

1.1 현재 서버 중지:
터미널에서 Ctrl+C로 현재 실행 중인 서버 중지

1.2 외부 접근 가능하게 서버 재시작:
cd /home/minsujo/inje-api-gateway
HOST=0.0.0.0 PORT=3001 npm run dev

설명: HOST=0.0.0.0은 모든 네트워크 인터페이스에서 접근을 허용합니다.

1.3 방화벽 설정:
sudo ufw allow 3001
sudo ufw status

1.4 포트 확인:
netstat -tlnp | grep 3001

기대 결과:
tcp6  0  0 :::3001  :::*  LISTEN

================================================================================
2단계: 같은 네트워크에서 외부 접근 테스트 (3분)
================================================================================

2.1 현재 네트워크에서 IP로 접근 테스트:
브라우저에서: http://192.168.0.25:3001/health

2.2 curl로 테스트:
curl http://192.168.0.25:3001/health

2.3 API 테스트:
curl -X POST http://192.168.0.25:3001/api/v1/transactions/submit \
  -H "Content-Type: application/json" \
  -H "X-API-Key: kuls-api-key-2025" \
  -d '{"correlationId": "ip-test-123", "containerId": "IP-TEST", "instruction": "LOAD", "source": "IP_TEST"}'

성공하면 → 외부 접근 설정 완료 ✅

================================================================================
3단계: 모바일 핫스팟 설정 (2분)
================================================================================

3.1 스마트폰에서 핫스팟 활성화:
- 설정 → 핫스팟 및 테더링 → 모바일 핫스팟 켜기
- 핫스팟 이름 확인 (예: Galaxy_ABC123)
- 비밀번호 확인

3.2 랩탑을 핫스팟에 연결:
- WiFi 설정에서 핫스팟 이름 찾기
- 비밀번호 입력하여 연결
- 인터넷 연결 확인

3.3 랩탑의 새로운 IP 확인:
ip addr show | grep "inet " | grep -v "127.0.0.1"

예상 결과: 192.168.43.xxx 또는 192.168.137.xxx 등

================================================================================
4단계: 핫스팟 환경에서 API Gateway 접근 테스트 (5분)
================================================================================

4.1 서버 IP 확인:
새로운 IP 주소 확인 (예: 192.168.43.100)

4.2 Health Check 테스트:
curl http://192.168.43.100:3001/health

4.3 완전한 API 테스트:
curl -X POST http://192.168.43.100:3001/api/v1/transactions/submit \
  -H "Content-Type: application/json" \
  -H "X-API-Key: kuls-api-key-2025" \
  -d '{"correlationId": "hotspot-test-123", "containerId": "HOTSPOT-001", "instruction": "MOBILE_LOAD", "source": "HOTSPOT_TEST"}'

4.4 상태 조회 테스트:
curl http://192.168.43.100:3001/api/v1/transactions/status/hotspot-test-123 \
  -H "X-API-Key: kuls-api-key-2025"

4.5 웹훅 상태 테스트:
curl http://192.168.43.100:3001/api/v1/webhooks/status

================================================================================
5단계: 다른 기기에서 접근 테스트 (추가 검증)
================================================================================

5.1 스마트폰에서 직접 테스트:
- 스마트폰 브라우저 열기
- http://192.168.43.100:3001/health 접속
- JSON 응답 확인

5.2 다른 랩탑/컴퓨터에서 테스트:
- 같은 핫스팟에 연결
- curl 또는 브라우저로 접근 테스트

================================================================================
6단계: 실제 KULS 시뮬레이션 (고급 테스트)
================================================================================

6.1 KULS 시스템 시뮬레이터 생성:
간단한 HTML 페이지로 API 호출 테스트

6.2 웹훅 수신 테스트:
간단한 웹훅 수신 서버 구동

6.3 전체 플로우 테스트:
트랜잭션 제출 → 상태 확인 → 웹훅 수신 전체 과정

================================================================================
예상 결과 및 검증 포인트
================================================================================

✅ 성공 시나리오:
1. 모든 API 호출이 정상 응답
2. 트랜잭션 처리 완료 (SUBMITTED → COMMITTED)
3. 다른 네트워크에서도 동일하게 작동
4. 응답 시간이 합리적 (1초 이내)

❌ 실패 시나리오:
1. 연결 거부 (Connection refused)
   → 방화벽 또는 포트 문제
2. 타임아웃
   → 네트워크 또는 라우팅 문제
3. 인증 오류
   → API 키 또는 CORS 문제

🔧 트러블슈팅:
1. 방화벽 재확인: sudo ufw status
2. 포트 바인딩 확인: netstat -tlnp | grep 3001
3. 로그 확인: 서버 콘솔 출력 모니터링

================================================================================
실제 KULS 연동과의 차이점
================================================================================

현재 테스트 환경:
- 모바일 핫스팟 (4G/5G 네트워크)
- 동적 IP (DHCP)
- NAT 환경

실제 KULS 환경:
- 대학 네트워크 (유선/무선)
- 고정 IP 또는 도메인
- 방화벽 정책

하지만 API 호출 방식과 응답은 완전히 동일합니다!

================================================================================
교수님께 보고할 검증 내용
================================================================================

테스트 완료 후 보고 내용:

"외부 네트워크 환경에서 API Gateway 접근 테스트 완료

✅ 검증 항목:
- 다른 네트워크에서 API 접근 성공
- 트랜잭션 처리 정상 작동
- 인증 시스템 정상 작동
- 웹훅 시스템 정상 작동

✅ 테스트 환경:
- 모바일 핫스팟을 이용한 완전 외부 환경
- 실제 KULS 연동 조건과 동일

✅ 결론:
KULS 시스템과의 실제 연동 준비 완료"

================================================================================
즉시 실행 가능한 명령어 모음
================================================================================

# 1. 현재 서버 중지 (Ctrl+C)

# 2. 외부 접근 서버 시작
cd /home/minsujo/inje-api-gateway
HOST=0.0.0.0 PORT=3001 npm run dev

# 3. 방화벽 설정
sudo ufw allow 3001

# 4. IP 확인
ip addr show | grep "inet " | grep -v "127.0.0.1"

# 5. 외부 접근 테스트
curl http://[실제IP]:3001/health

# 6. 모바일 핫스팟 연결 후 재테스트
curl http://[새로운IP]:3001/health

================================================================================
성공 기준: 이 모든 테스트가 성공하면 KULS 연동 100% 준비 완료! 🚀
================================================================================